---
import Layout from "../../../layouts/Layout.astro";
import BlogPost from "../../../components/blog/BlogPost.astro";
import Heading from "../../../components/ui/Heading.astro";
import { getCollection, type CollectionEntry } from 'astro:content'; // <-- 1. Import getCollection and the type helper

// --- REFACTORED getStaticPaths FUNCTION ---
export async function getStaticPaths() {
  // 2. Fetch all blog posts using the new method
  const allPosts = await getCollection('blog');

  // 3. The logic to find unique languages is the same, but we access `post.data`
  const uniqueLanguages: string[] = [
    ...new Set(allPosts.map((post) => post.data.languages).flat()),
  ];

  // 4. We map over the languages to create pages
  return uniqueLanguages.map((language) => {
    // The filter logic is also the same, just using `post.data`
    const filteredPosts = allPosts.filter((post) =>
      post.data.languages.includes(language)
    );
    return {
      params: { category: language }, // The URL param will be the language name
      props: { posts: filteredPosts }, // Pass the filtered posts to the page
    };
  });
}

const { category } = Astro.params;
const { posts } = Astro.props;
---

<Layout pageTitle={`Posts about ${category}`}>
  <section class="py-8">
    <div class="flex flex-col gap-8 max-w-4xl mx-auto">
      <Heading text="Posts about" textGradient={category} />

      {
        posts.map((post) => (
          // --- 5. Update the props for the BlogPost component ---
          <BlogPost
            url={`/blog/${post.slug}/`}
            title={post.data.title}
            date={post.data.pubDate}
            tags={post.data.tags}
            languages={post.data.languages}
            image={post.data.image}
          />
        ))
      }
    </div>
  </section>
</Layout>